{"componentChunkName":"component---src-templates-template-tsx","path":"/get-physical-path-from-metadata-libref/","result":{"data":{"site":{"meta":{"title":"Raw SAS - SAS Tips n Tricks","description":"Tips n Tricks and other SAS Titbits from around 10 years of SAS projects and tinkering about with SAS"}},"post":{"id":"e77a9a14-1fbc-5321-b834-3400e6f07600","html":"<p>So it turns out that it is not possible to place a SAS lock on a table referenced via the Metadata Libname Engine:<br /><br /><span style=\"font-family: Courier New, Courier, monospace;\">WARNING: LOCK is not supported in MLE.</span><br /><br />To circumvent this issue, one approach is to assign a libref directly. The following macro takes a libref (placed in the lib= keyword parameter) and queries the metadata for a physical path (placed in macro variable specified in the outvar= keyword parameter).<br /><br />Note that not all librefs have an underlying directory (eg database tables).<br /><br /><span style=\"font-family: Courier New, Courier, monospace;\">%macro get<em>path<em>from</em>metalibref(lib=,outvar=filepath);</span><br /><span style=\"font-family: Courier New, Courier, monospace;\">   data _null</em>;</span><br /><span style=\"font-family: Courier New, Courier, monospace;\">      putlog “NOTE: Getting physical path for &#x26;lib library”;</span><br /><span style=\"font-family: Courier New, Courier, monospace;\">      length lib<em>uri up<em>uri filepath $256;</span><br /><span style=\"font-family: Courier New, Courier, monospace;\">      call missing (of \\</em>all</em>);</span><br /><span style=\"font-family: Courier New, Courier, monospace;\">      /_ get URI for the particular library <em>/</span><br /><span style=\"font-family: Courier New, Courier, monospace;\">      rc1=metadata</em>getnobj(“omsobj:SASLibrary?@Libref =’&#x26;lib’“,1,lib<em>uri);</span><br /><span style=\"font-family: Courier New, Courier, monospace;\">      put rc1= lib</em>uri= ;</span><br /><span style=\"font-family: Courier New, Courier, monospace;\">      /_ get first object of the UsingPackages association (assumed to be Path) <em>/</span><br /><span style=\"font-family: Courier New, Courier, monospace;\">      rc2=metadata</em>getnasn(lib<em>uri,‘UsingPackages’,1,up</em>uri);</span><br /><span style=\"font-family: Courier New, Courier, monospace;\">      put rc2= up<em>uri= ;</span><br /><span style=\"font-family: Courier New, Courier, monospace;\">      /</em> get the DirectoryName attribute of the previous object <em>/</span><br /><span style=\"font-family: Courier New, Courier, monospace;\">      rc3=metadata</em>getattr(up_uri,‘DirectoryName’,filepath);</span><br /><span style=\"font-family: Courier New, Courier, monospace;\">      put rc3= filepath=;</span><br /><span style=\"font-family: Courier New, Courier, monospace;\">      call symputx(”&#x26;outvar”,filepath,‘g’);</span><br /><span style=\"font-family: Courier New, Courier, monospace;\">   run;</span><br /><span style=\"font-family: Courier New, Courier, monospace;\">%mend;</span><div data-bid=\"11a492c4-afd5-4c83-9bcc-d304573e1386\" data-u></div></p>","frontmatter":{"title":"Get Physical Path From Metadata Libref","path":"/get-physical-path-from-metadata-libref/","previewImg":null,"tags":["SQL"],"date":"Mar 17, 2015"}}},"pageContext":{"archives":{"2012":8,"2013":10,"2014":4,"2015":7,"2016":17,"2017":12,"2018":9,"2019":2,"2020":3}}},"staticQueryHashes":[]}